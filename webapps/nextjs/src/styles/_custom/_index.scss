@use "sass:map";
@use "../core" as c;
@use "./themes.config" as t;
@use "./components";

@each $theme-name, $theme-vars in t.$themes {
  .#{$theme-name} {
    $color-primary: map.get($theme-vars, color-primary);
    $color-highlight: map.get($theme-vars, color-highlight);
    $color-secondary: map.get($theme-vars, color-secondary);

    fill: $color-secondary;
    stroke: $color-secondary;

    /* A */
    .admin,
    &.admin {
      fill: $color-highlight;
      color: $color-highlight;
      stroke: $color-highlight;
    }

    /* H */
    .highlight,
    &.highlight {
      fill: $color-highlight;
      color: $color-highlight;
      stroke: $color-highlight;
    }

    /* I */
    #impersonation-header-tag {
      div {
        fill: $color-secondary;
        stroke: $color-secondary;
        border-color: $color-secondary;

        p {
          color: $color-secondary;
          background-color: $color-primary;
        }
      }
    }

    /* L */

    .loading-spinner {
      fill: $color-secondary;
      stroke: $color-secondary;
    }

    /* S */
    .scrollbar-x,
    .scrollbar-y {
      &::-webkit-scrollbar-track {
        background: $color-primary;
      }

      &::-webkit-scrollbar-thumb {
        border-color: $color-primary;
        background-color: $color-secondary;
      }

      &::-webkit-scrollbar-corner {
        background-color: $color-primary;
      }
    }
  }
}

@each $theme-name, $theme-vars in t.$themes {
  $color-primary: map.get($theme-vars, color-primary);
  $color-secondary: map.get($theme-vars, color-secondary);
  $color-highlight: map.get($theme-vars, color-highlight);

  .#{$theme-name} {
    transition: color map.get(c.$transition_durations, m) ease-out,
      background-color map.get(c.$transition_durations, m) ease-out,
      border-color map.get(c.$transition_durations, m) ease-out;

    .link-text {
      fill: $color-highlight;
      color: $color-highlight;
      stroke: $color-highlight;
    }

    .color-primary {
      color: $color-primary;
    }

    .color-secondary {
      color: $color-secondary;
    }

    .color-highlight {
      color: $color-highlight;
    }

    * {
      &::-webkit-scrollbar-track {
        background-color: $color-secondary;
      }

      &::-webkit-scrollbar-thumb {
        background-color: $color-primary;
      }
    }
  }
}

a {
  cursor: pointer;
  font-weight: bold;
  text-transform: uppercase;
}

.link-text {
  cursor: pointer;
  font-weight: bold;
  filter: brightness(1);
  text-transform: uppercase;
  transition: filter map.get(c.$transition_durations, m) ease-out;

  &:hover {
    filter: brightness(0.5);
  }
}

aside {
  @include c.fadeIn();
}

body {
  background-color: map.get(map.get(t.$themes, dark), color-primary);
}

section {
  @include c.fadeIn();
}

svg {
  transition: fill map.get(c.$transition_durations, m) ease-out;

  path,
  line,
  rect,
  polyline {
    transition: stroke map.get(c.$transition_durations, m) ease-out;
  }
}
